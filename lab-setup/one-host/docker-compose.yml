version: '3.7'

services:
  portainer:
    image: portainer/portainer-ee:latest
    container_name: portainer
    command: --ssl --sslcert /certs/portainer.cert --sslkey /certs/portainer.key
    ports:
      - "9444:9443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "portainer_data:/data"
      - "./certs/portainer.cert:/certs/portainer.cert"
      - "./certs/portainer.key:/certs/portainer.key"
    networks:
      - my_network
    restart: always

  registry-1:
    image: registry:2
    container_name: registry-1
    restart: always
    environment:
      REGISTRY_HTTP_TLS_CERTIFICATE: /certs/registry-1.cert
      REGISTRY_HTTP_TLS_KEY: /certs/registry-1.key
    ports:
      - "5000:5000"
    volumes:
      - registry1_data:/var/lib/registry
      - "./certs/registry-1.cert:/certs/registry-1.cert"
      - "./certs/registry-1.key:/certs/registry-1.key"
    networks:
      - my_network

  registry-2:
    image: registry:2
    container_name: registry-2
    restart: always
    environment:
      REGISTRY_HTTP_TLS_CERTIFICATE: /certs/registry-2.cert
      REGISTRY_HTTP_TLS_KEY: /certs/registry-2.key
    ports:
      - "5001:5000"
    volumes:
      - registry2_data:/var/lib/registry
      - "./certs/registry-2.cert:/certs/registry-2.cert"
      - "./certs/registry-2.key:/certs/registry-2.key"
    networks:
      - my_network

  registry-3:
    image: registry:2
    container_name: registry-3
    restart: always
    environment:
      REGISTRY_HTTP_TLS_CERTIFICATE: /certs/registry-3.cert
      REGISTRY_HTTP_TLS_KEY: /certs/registry-3.key
    ports:
      - "5002:5000"
    volumes:
      - registry3_data:/var/lib/registry
      - "./certs/registry-3.cert:/certs/registry-3.cert"
      - "./certs/registry-3.key:/certs/registry-3.key"
    networks:
      - my_network

  developer:
    image: docker:latest
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - registry-1
      - registry-2
      - registry-3
    command: sh -c "while sleep 1000; do :; done"
    networks:
      - my_network
    restart: always

  docker-staging:
    image: docker:dind
    container_name: docker-staging
    privileged: true
    environment:
      DOCKER_TLS_CERTDIR: "/certs"
    ports:
      - "2375:2376"
    volumes:
      - staging_docker_data:/var/lib/docker
      - "./certs/docker-staging.cert:/certs/server/cert.pem"
      - "./certs/docker-staging.key:/certs/server/key.pem"
      - "./certs/docker-staging.cert:/certs/server/ca.pem"
    networks:
      - my_network

  docker-prod:
    image: docker:dind
    container_name: docker-prod
    privileged: true
    environment:
      DOCKER_TLS_CERTDIR: "/certs"
    ports:
      - "2376:2376"
    volumes:
      - prod_docker_data:/var/lib/docker
      - "./certs/docker-prod.cert:/certs/server/cert.pem"
      - "./certs/docker-prod.key:/certs/server/key.pem"
      - "./certs/docker-prod.cert:/certs/server/ca.pem" # Se utiliza el mismo certificado debido a que no tenemos un CA implementado
    networks:
      - my_network

networks:
  my_network:
    driver: bridge

volumes:
  staging_docker_data:
  prod_docker_data:
  portainer_data:
  registry1_data:
  registry2_data:
  registry3_data:
